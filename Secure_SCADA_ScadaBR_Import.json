{
   "graphicalViews":[
      {
         "user":"admin",
         "anonymousAccess":"NONE",
         "viewComponents":[
            {
               "type":"DYNAMIC_GRAPHIC",
               "dataPointXid":"DP_735284",
               "dynamicImage":"Dial",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "max":9999.0,
               "min":0.0,
               "nameOverride":"",
               "settableOverride":false,
               "x":1020,
               "y":267
            },
            {
               "type":"SCRIPT",
               "dataPointXid":"DP_735284",
               "bkgdColorOverride":"",
               "displayControls":false,
               "nameOverride":"",
               "script":"\/* @license MIT  *\/\n\n\/\/ Appearance settings\nvar height = 25;\nvar width = 60;\n\nvar background_color = \"#FFFFFF\";\nvar text_color = \"#000000\";\n\n\/\/ Restrict insertion of values \nvar restrict_values = false;\nvar step = 1;\nvar minimum = 0;\nvar maximum = 9999;\n\n\n\n\n\/\/\n\/\/ DON'T CHANGE THE CODE BELOW\n\/\/\n\n\n\n\n\/\/ Check if data point type is compatible\nif (getDataPointType(point.id) != \"MULTISTATE\" && getDataPointType(point.id) != \"NUMERIC\")\n\treturn \"Invalid data point type. Please select a numeric or multistate data point.\"\n\nvar padding = 2;\nvar border = 1;\nheight = height - 2 * (border + padding);\nwidth = width - 2 * (border + padding);\n\nvar command = \"mango.view.setPoint(\" + point.id + \", \" + pointComponent.id + \", value)\" ;\nvar restriction = \"if (this.checkValidity()) \" + command;\n\n\/\/ Return variable\nvar s = \"\";\n\ns += \"<input type='number' value='\" + value + \"' \";\n\ns += \"style='height: \" + height + \"px; width: \" + width + \"px;\"\ns += \t\t\"background-color:\" + background_color + \"; color:\" + text_color + \"; \";\ns += \t\t\"padding: \" + padding + \"px; border: \" + border + \"px solid' \";\n\nif (restrict_values) {\n\ts += \"onchange='\" + restriction + \"' \";\n\ts += \"onkeyup='this.reportValidity();' \"\n\ts += \"step='\" + step + \"' min='\" + minimum + \"' max='\" + maximum + \"' \";\t\n} else {\n\ts += \"onchange='\" + command + \"' \";\n}\n\ns += \">\";\n\n\/\/ Disable unwanted validations in View Edit page\ns += \"<script>try {document.getElementsByName('view')[0].noValidate = true;} catch(e) {};<\/script>\"\n\nreturn s;\n\nfunction getDataPointType(identifier) {\n\tvar types = {\n\t\t0: \"UNKNOWN\",\n\t\t1: \"BINARY\",\n\t\t2: \"MULTISTATE\",\n\t\t3: \"NUMERIC\",\n\t\t4: \"ALPHANUMERIC\",\n\t\t5: \"IMAGE\"\n\t}\n\n\tvar dpDAO = new com.serotonin.mango.db.dao.DataPointDao();\n    var dp = dpDAO.getDataPoint(identifier);\n\tvar locator = dp.getPointLocator();\n\treturn types[locator.getDataTypeId()];\n}",
               "settableOverride":true,
               "x":1109,
               "y":120
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_122663",
               "imageSet":"Leds32",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":5,
               "settableOverride":false,
               "x":1229,
               "y":465,
               "zeroImageIndex":8
            },
            {
               "type":"SCRIPT",
               "dataPointXid":"DP_272709",
               "bkgdColorOverride":"",
               "displayControls":false,
               "nameOverride":"",
               "script":"\/* @license MIT *\/\n\n\/\/ The maximum and minimum for data point scale\nvar scale_min = 0;\nvar scale_max = 100;\n\n\/\/ Customize bar\nvar bar_height = 50;\nvar bar_width = 300;\n\nvar background_color = \"#FFFFFF\";\nvar foreground_color = \"#12CE00\";\nvar border_color = \"#555555\";\n\n\n\n\n\/\/\n\/\/ DON'T CHANGE THE CODE BELOW\n\/\/\n\n\n\n\n\/\/ Conversion of data point scale to percentage\nvar percentage = 0;\nif (value > scale_max) {\n\tpercentage = 100;\n} else if (value < scale_min) {\n\tpercentage = 0;\n} else {\n\tpercentage = ((value - scale_min) \/ (scale_max - scale_min)) * 100;\n}\n\n\/\/ Return variable\nvar s = \"\";\n\ns += \"<div style='\";\ns += \t\"border: 1px solid \" + border_color + \"; \";\ns += \t\"position: relative; \";\ns += \t\"background-color: \" + background_color + \"; \";\ns +=\t\"width: \" + bar_width + \"px; \";\ns +=\t\"height: \" + bar_height + \"px; \";\ns += \"' >\";\ns += \t\"<div style='\";\ns +=\t\t\"background-color: \" + foreground_color + \"; \";\ns +=\t\t\"height: 100%; \";\ns +=\t\t\"width: \" + percentage + \"%; \";\ns +=\t\t\"position: absolute; top: 0px; left: 0px; \";\ns +=\t\"' ><\/div>\";\ns += \"<\/div>\";\n\nreturn s;",
               "settableOverride":false,
               "x":942,
               "y":626
            }
         ],
         "sharingUsers":[
         ],
         "backgroundFilename":"uploads\/9.png",
         "name":"Generator",
         "xid":"GV_527223"
      },
      {
         "user":"admin",
         "anonymousAccess":"NONE",
         "viewComponents":[
            {
               "type":"SCRIPT",
               "dataPointXid":"DP_201416",
               "bkgdColorOverride":"",
               "displayControls":false,
               "nameOverride":"",
               "script":"\/* @license MIT  *\/\n\n\/\/ Gauge description\nvar description = \"Power Output\";\n\n\/\/ Scale settings\nvar maximum = 9999;\nvar minimum = 0;\n\n\/\/ Gauge's width (height is set automatically)\nvar width = 350;\n\n\/\/ Display value format\nvar preffix = \"\";\nvar suffix = \"\";\nvar decimal_places = 0;\n\n\/\/ Color settings (background is transparent by default)\nvar background_color = \"\";\nvar text_color = \"#000000\";\nvar bar_color = \"#12CE00\";\n\n\/\/ Enable extra bar colors\nvar enable_extra_colors = true;\n\n\/\/ Extra bar colors settings\nvar extra_colors = [\n\t{ color: \"#FFC200\", value: 0 },\n\t{ color: \"#10ad27\", value: 5001 },\n\t{ color: \"#8f0d06\", value: 9000 }\n];\n\n\n\n\n\/\/\n\/\/ DON'T CHANGE THE CODE BELOW\n\/\/\n\n\n\n\n\/\/ Check if data point type is compatible\nif (getDataPointType(point.id) != \"MULTISTATE\" && getDataPointType(point.id) != \"NUMERIC\")\n\treturn \"Invalid data point type. Please select a numeric or multistate data point.\"\n\t\n\/\/ Convert angle to radians\nvar arc_angle = undefined;\n\nif (value > maximum)\n\tarc_angle = 2 * Math.PI;\nelse if (value < minimum)\n\tarc_angle = Math.PI;\nelse\n\tarc_angle = Math.PI + ((value - minimum) \/ (maximum - minimum)) * Math.PI\n\n\n\/\/ Define the bar color\nvar color = bar_color;\nif (enable_extra_colors) {\n\textra_colors.sort(function(a, b) {\n\t\treturn a.value - b.value;\n\t});\n\n\tfor (var i in extra_colors) {\t\t\n\t\tif ((value.toFixed(decimal_places) >= extra_colors[i].value)) {\n\t\t\tcolor = extra_colors[i].color;\n\t\t}\n\t}\n}\n\n\/\/ If not given background color, set it to transparent\nif (typeof background_color != \"string\" || background_color.length == 0) {\n\tbackground_color = \"rgb(255, 255, 255, 0)\";\n}\n\n\/\/ Auxiliary variables\nvar height = 0.75 * width;\nvar centerX = 0.5 * width;\nvar centerY = 0.625 * width;\nvar display_value = preffix + value.toFixed(decimal_places) + suffix;\nvar radius = 0.40 * width;\nvar descY = centerY - (radius * 1.25);\nvar descFont = (0.12 * width) + \"px sans-serif\";\nvar valueFont = (0.16 * width) + \"px sans-serif\";\nvar bar_background_color = \"#CCCCCC\";\nvar bar_width = (0.10 * width);\n\n\/\/ Return variable\nvar s = \"\";\n\n\/\/ Create HTML elements\ns += \"<div>\";\ns += \t\"<canvas id='medidor\" + pointComponent.id + \"' height='\" + height + \"' width='\" + width + \"'>\";\ns += \t\t\"<center>\";\ns += \t\t\t\"<strong>This browser does not support this element.<\/strong>\";\ns += \t\t\t\"<p>\" + description + \":\" + display_value + \"<\/p>\";\ns += \t\t\"<\/center>\";\ns += \t\"<\/canvas>\";\ns += \"<\/div>\";\n\t\n\/\/ Create JavaScript code to draw the gauge\ns += \"<script>\";\n\n\/\/ Get the <canvas> element\ns += \"var canvas = document.getElementById('medidor\" + pointComponent.id + \"');\";\ns += \"var ctx = canvas.getContext('2d');\";\ns += \"ctx.lineWidth = \" + bar_width + \";\";\n\n\/\/ Draw gauge's background\ns += \"ctx.fillStyle = '\" + background_color + \"';\";\ns += \"ctx.fillRect(0, 0, \" + width + \", \" +  height + \");\";\n\n\/\/ Draw bar background\ns += \"ctx.beginPath();\";\ns += \"ctx.strokeStyle = '\" + bar_background_color + \"';\";\ns += \"ctx.arc(\" + centerX + \", \" + centerY + \", \" + radius + \", Math.PI, 0);\";\ns += \"ctx.stroke();\";\ns += \"ctx.closePath();\";\n\n\/\/ Draw bar foreground\ns += \"ctx.beginPath();\";\ns += \"ctx.strokeStyle = '\" + color +\"';\";\ns += \"ctx.arc(\" + centerX + \", \" + centerY + \", \" + radius + \", Math.PI, \" + arc_angle +\");\";\ns += \"ctx.stroke();\";\ns += \"ctx.closePath();\";\n\n\/\/ Draw the texts\ns += \"ctx.lineWidth = 1;\";\ns += \"ctx.beginPath();\";\ns += \"ctx.fillStyle = '\" + text_color + \"';\";\ns += \"ctx.textAlign = 'center';\";\ns += \"ctx.font = '\" + descFont + \"';\";\ns += \"ctx.fillText('\" + description + \"', \" + centerX + \", \" + descY + \");\";\ns += \"ctx.font = '\" + valueFont + \"';\";\ns += \"ctx.fillText('\" + display_value + \"', \" + centerX + \", \" + centerY + \");\";\n\ns += \"<\/script>\";\n\nreturn s;\n\nfunction getDataPointType(identifier) {\n\tvar types = {\n\t\t0: \"UNKNOWN\",\n\t\t1: \"BINARY\",\n\t\t2: \"MULTISTATE\",\n\t\t3: \"NUMERIC\",\n\t\t4: \"ALPHANUMERIC\",\n\t\t5: \"IMAGE\"\n\t}\n\n\tvar dpDAO = new com.serotonin.mango.db.dao.DataPointDao();\n    var dp = dpDAO.getDataPoint(identifier);\n\tvar locator = dp.getPointLocator();\n\treturn types[locator.getDataTypeId()];\n}",
               "settableOverride":false,
               "x":246,
               "y":73
            },
            {
               "type":"SCRIPT",
               "dataPointXid":"DP_735284",
               "bkgdColorOverride":"",
               "displayControls":false,
               "nameOverride":"",
               "script":"\/* @license MIT  *\/\n\n\/\/ Gauge description\nvar description = \"Power Output\";\n\n\/\/ Scale settings\nvar maximum = 9999;\nvar minimum = 0;\n\n\/\/ Gauge's width (height is set automatically)\nvar width = 350;\n\n\/\/ Display value format\nvar preffix = \"\";\nvar suffix = \"\";\nvar decimal_places = 0;\n\n\/\/ Color settings (background is transparent by default)\nvar background_color = \"\";\nvar text_color = \"#000000\";\nvar bar_color = \"#12CE00\";\n\n\/\/ Enable extra bar colors\nvar enable_extra_colors = true;\n\n\/\/ Extra bar colors settings\nvar extra_colors = [\n\t{ color: \"#FFC200\", value: 0 },\n\t{ color: \"#10ad27\", value: 2001 },\n\t{ color: \"#8f0d06\", value: 9000 }\n];\n\n\n\n\n\/\/\n\/\/ DON'T CHANGE THE CODE BELOW\n\/\/\n\n\n\n\n\/\/ Check if data point type is compatible\nif (getDataPointType(point.id) != \"MULTISTATE\" && getDataPointType(point.id) != \"NUMERIC\")\n\treturn \"Invalid data point type. Please select a numeric or multistate data point.\"\n\t\n\/\/ Convert angle to radians\nvar arc_angle = undefined;\n\nif (value > maximum)\n\tarc_angle = 2 * Math.PI;\nelse if (value < minimum)\n\tarc_angle = Math.PI;\nelse\n\tarc_angle = Math.PI + ((value - minimum) \/ (maximum - minimum)) * Math.PI\n\n\n\/\/ Define the bar color\nvar color = bar_color;\nif (enable_extra_colors) {\n\textra_colors.sort(function(a, b) {\n\t\treturn a.value - b.value;\n\t});\n\n\tfor (var i in extra_colors) {\t\t\n\t\tif ((value.toFixed(decimal_places) >= extra_colors[i].value)) {\n\t\t\tcolor = extra_colors[i].color;\n\t\t}\n\t}\n}\n\n\/\/ If not given background color, set it to transparent\nif (typeof background_color != \"string\" || background_color.length == 0) {\n\tbackground_color = \"rgb(255, 255, 255, 0)\";\n}\n\n\/\/ Auxiliary variables\nvar height = 0.75 * width;\nvar centerX = 0.5 * width;\nvar centerY = 0.625 * width;\nvar display_value = preffix + value.toFixed(decimal_places) + suffix;\nvar radius = 0.40 * width;\nvar descY = centerY - (radius * 1.25);\nvar descFont = (0.12 * width) + \"px sans-serif\";\nvar valueFont = (0.16 * width) + \"px sans-serif\";\nvar bar_background_color = \"#CCCCCC\";\nvar bar_width = (0.10 * width);\n\n\/\/ Return variable\nvar s = \"\";\n\n\/\/ Create HTML elements\ns += \"<div>\";\ns += \t\"<canvas id='medidor\" + pointComponent.id + \"' height='\" + height + \"' width='\" + width + \"'>\";\ns += \t\t\"<center>\";\ns += \t\t\t\"<strong>This browser does not support this element.<\/strong>\";\ns += \t\t\t\"<p>\" + description + \":\" + display_value + \"<\/p>\";\ns += \t\t\"<\/center>\";\ns += \t\"<\/canvas>\";\ns += \"<\/div>\";\n\t\n\/\/ Create JavaScript code to draw the gauge\ns += \"<script>\";\n\n\/\/ Get the <canvas> element\ns += \"var canvas = document.getElementById('medidor\" + pointComponent.id + \"');\";\ns += \"var ctx = canvas.getContext('2d');\";\ns += \"ctx.lineWidth = \" + bar_width + \";\";\n\n\/\/ Draw gauge's background\ns += \"ctx.fillStyle = '\" + background_color + \"';\";\ns += \"ctx.fillRect(0, 0, \" + width + \", \" +  height + \");\";\n\n\/\/ Draw bar background\ns += \"ctx.beginPath();\";\ns += \"ctx.strokeStyle = '\" + bar_background_color + \"';\";\ns += \"ctx.arc(\" + centerX + \", \" + centerY + \", \" + radius + \", Math.PI, 0);\";\ns += \"ctx.stroke();\";\ns += \"ctx.closePath();\";\n\n\/\/ Draw bar foreground\ns += \"ctx.beginPath();\";\ns += \"ctx.strokeStyle = '\" + color +\"';\";\ns += \"ctx.arc(\" + centerX + \", \" + centerY + \", \" + radius + \", Math.PI, \" + arc_angle +\");\";\ns += \"ctx.stroke();\";\ns += \"ctx.closePath();\";\n\n\/\/ Draw the texts\ns += \"ctx.lineWidth = 1;\";\ns += \"ctx.beginPath();\";\ns += \"ctx.fillStyle = '\" + text_color + \"';\";\ns += \"ctx.textAlign = 'center';\";\ns += \"ctx.font = '\" + descFont + \"';\";\ns += \"ctx.fillText('\" + description + \"', \" + centerX + \", \" + descY + \");\";\ns += \"ctx.font = '\" + valueFont + \"';\";\ns += \"ctx.fillText('\" + display_value + \"', \" + centerX + \", \" + centerY + \");\";\n\ns += \"<\/script>\";\n\nreturn s;\n\nfunction getDataPointType(identifier) {\n\tvar types = {\n\t\t0: \"UNKNOWN\",\n\t\t1: \"BINARY\",\n\t\t2: \"MULTISTATE\",\n\t\t3: \"NUMERIC\",\n\t\t4: \"ALPHANUMERIC\",\n\t\t5: \"IMAGE\"\n\t}\n\n\tvar dpDAO = new com.serotonin.mango.db.dao.DataPointDao();\n    var dp = dpDAO.getDataPoint(identifier);\n\tvar locator = dp.getPointLocator();\n\treturn types[locator.getDataTypeId()];\n}",
               "settableOverride":false,
               "x":939,
               "y":80
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_607608",
               "imageSet":"Leds48",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":13,
               "settableOverride":false,
               "x":66,
               "y":73,
               "zeroImageIndex":9
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_356500",
               "imageSet":"Leds48",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":7,
               "settableOverride":false,
               "x":67,
               "y":242,
               "zeroImageIndex":9
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_122663",
               "imageSet":"Leds48",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":4,
               "settableOverride":false,
               "x":760,
               "y":72,
               "zeroImageIndex":9
            }
         ],
         "sharingUsers":[
         ],
         "backgroundFilename":"uploads\/4.png",
         "name":"Power Monitoring",
         "xid":"GV_781497"
      },
      {
         "user":"admin",
         "anonymousAccess":"NONE",
         "viewComponents":[
            {
               "type":"SCRIPT",
               "dataPointXid":"DP_201416",
               "bkgdColorOverride":"",
               "displayControls":false,
               "nameOverride":"",
               "script":"\/* @license MIT  *\/\n\n\/\/ Appearance settings\nvar height = 25;\nvar width = 60;\n\nvar background_color = \"#FFFFFF\";\nvar text_color = \"#000000\";\n\n\/\/ Restrict insertion of values \nvar restrict_values = false;\nvar step = 1;\nvar minimum = 0;\nvar maximum = 9999;\n\n\n\n\n\/\/\n\/\/ DON'T CHANGE THE CODE BELOW\n\/\/\n\n\n\n\n\/\/ Check if data point type is compatible\nif (getDataPointType(point.id) != \"MULTISTATE\" && getDataPointType(point.id) != \"NUMERIC\")\n\treturn \"Invalid data point type. Please select a numeric or multistate data point.\"\n\nvar padding = 2;\nvar border = 1;\nheight = height - 2 * (border + padding);\nwidth = width - 2 * (border + padding);\n\nvar command = \"mango.view.setPoint(\" + point.id + \", \" + pointComponent.id + \", value)\" ;\nvar restriction = \"if (this.checkValidity()) \" + command;\n\n\/\/ Return variable\nvar s = \"\";\n\ns += \"<input type='number' value='\" + value + \"' \";\n\ns += \"style='height: \" + height + \"px; width: \" + width + \"px;\"\ns += \t\t\"background-color:\" + background_color + \"; color:\" + text_color + \"; \";\ns += \t\t\"padding: \" + padding + \"px; border: \" + border + \"px solid' \";\n\nif (restrict_values) {\n\ts += \"onchange='\" + restriction + \"' \";\n\ts += \"onkeyup='this.reportValidity();' \"\n\ts += \"step='\" + step + \"' min='\" + minimum + \"' max='\" + maximum + \"' \";\t\n} else {\n\ts += \"onchange='\" + command + \"' \";\n}\n\ns += \">\";\n\n\/\/ Disable unwanted validations in View Edit page\ns += \"<script>try {document.getElementsByName('view')[0].noValidate = true;} catch(e) {};<\/script>\"\n\nreturn s;\n\nfunction getDataPointType(identifier) {\n\tvar types = {\n\t\t0: \"UNKNOWN\",\n\t\t1: \"BINARY\",\n\t\t2: \"MULTISTATE\",\n\t\t3: \"NUMERIC\",\n\t\t4: \"ALPHANUMERIC\",\n\t\t5: \"IMAGE\"\n\t}\n\n\tvar dpDAO = new com.serotonin.mango.db.dao.DataPointDao();\n    var dp = dpDAO.getDataPoint(identifier);\n\tvar locator = dp.getPointLocator();\n\treturn types[locator.getDataTypeId()];\n}",
               "settableOverride":true,
               "x":257,
               "y":207
            },
            {
               "type":"DYNAMIC_GRAPHIC",
               "dataPointXid":"DP_201416",
               "dynamicImage":"Dial",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "max":9999.0,
               "min":0.0,
               "nameOverride":"",
               "settableOverride":false,
               "x":117,
               "y":279
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_356500",
               "imageSet":"Botao-3D",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":1,
               "settableOverride":true,
               "x":387,
               "y":58,
               "zeroImageIndex":0
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_356500",
               "imageSet":"Leds32",
               "bkgdColorOverride":"",
               "displayControls":true,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":8,
               "settableOverride":false,
               "x":313,
               "y":456,
               "zeroImageIndex":5
            },
            {
               "type":"BUTTON",
               "dataPointXid":"DP_356500",
               "bkgdColorOverride":"",
               "displayControls":false,
               "height":100,
               "nameOverride":"",
               "script":"var s = '';if (value)  s += \"<input type='button' value='Deactivate Emergency Cut Off' onclick='mango.view.setPoint(\"+ point.id +\",\"+ pointComponent.id +\", false);return false;' \/>\"; else s += \"<input type='button' value='Activate Emergency Cut Off' onclick='mango.view.setPoint(\"+ point.id +\",\"+ pointComponent.id +\", true);return true;' \/>\"; return s;",
               "settableOverride":true,
               "whenOffLabel":"Activate Emergency Cut Off",
               "whenOnLabel":"Deactivate Emergency Cut Off",
               "width":0,
               "x":191,
               "y":99
            }
         ],
         "sharingUsers":[
         ],
         "backgroundFilename":"uploads\/8.png",
         "name":"Power Station",
         "xid":"GV_998493"
      },
      {
         "user":"admin",
         "anonymousAccess":"NONE",
         "viewComponents":[
            {
               "type":"ANALOG_GRAPHIC",
               "dataPointXid":"DP_638463",
               "imageSet":"GreenThermo",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "max":30.0,
               "min":0.0,
               "nameOverride":"",
               "settableOverride":false,
               "x":49,
               "y":445
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_711238",
               "imageSet":"Leds48",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":14,
               "settableOverride":false,
               "x":140,
               "y":531,
               "zeroImageIndex":9
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_165625",
               "imageSet":"Leds48",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":8,
               "settableOverride":false,
               "x":140,
               "y":458,
               "zeroImageIndex":9
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_629623",
               "imageSet":"viconics.VT7300.Fan",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":0,
               "settableOverride":false,
               "x":0,
               "y":1,
               "zeroImageIndex":1
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_629623",
               "imageSet":"viconics.VT7300.Fan",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":0,
               "settableOverride":false,
               "x":110,
               "y":1,
               "zeroImageIndex":1
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_629623",
               "imageSet":"viconics.VT7300.Fan",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":0,
               "settableOverride":false,
               "x":0,
               "y":111,
               "zeroImageIndex":1
            },
            {
               "type":"BINARY_GRAPHIC",
               "dataPointXid":"DP_629623",
               "imageSet":"viconics.VT7300.Fan",
               "bkgdColorOverride":"",
               "displayControls":false,
               "displayText":false,
               "nameOverride":"",
               "oneImageIndex":0,
               "settableOverride":false,
               "x":110,
               "y":111,
               "zeroImageIndex":1
            },
            {
               "type":"SCRIPT",
               "dataPointXid":"DP_323364",
               "bkgdColorOverride":"",
               "displayControls":false,
               "nameOverride":"",
               "script":"\/* @license MIT *\/\n\n\/\/ Button label\nvar label = \"Download point history\";\n\n\/\/ The name of CSV file to download\nvar filename = \"Point History.csv\";\n\n\/\/ Data points included in history (ID or XID)\nvar points  = [ point.id ]; \n\n\/\/ History period (select time unit above)\nvar time_period = 2;\n\n\/\/ History time unit:\n\/\/ 0 -> minutes\n\/\/ 1 -> hours\n\/\/ 2 -> days\nvar time_unit = 1;\n\n\/\/ Change SimpleDateFormat time pattern (advanced!)\nvar time_pattern = \"yyyy-MM-dd KK:mm a\";\n\n\n\n\n\/\/\n\/\/ DON'T CHANGE THE CODE BELOW\n\/\/\n\n\n\n\n\/\/ Convert time to milliseconds\ntime_unit = time_unit > 2 ? 2 : time_unit;\nvar units = [ 60000, 3600000, 43200000];\nvar startTime = new Date().getTime() - (time_period * units[time_unit]);\n\n\/\/ Create onclick command\nvar command = \"\";\ncommand += \"var element = document.createElement(\\\"a\\\");\";\ncommand += \"element.setAttribute(\\\"href\\\", \\\"data:text\/plain;charset=utf-8,\\\" + \\\"\" + createFinalCSV() + \"\\\");\";\ncommand += \"element.setAttribute(\\\"download\\\", \\\"\" + filename + \"\\\");\";\ncommand += \"element.style.display = \\\"none\\\";\";\ncommand += \"document.body.appendChild(element);\";\ncommand += \"element.click();\";\ncommand += \"document.body.removeChild(element);\";\n\n\/\/ Return variable\nvar s = \"\";\n\n\/\/ Create HTML download button\ns += \"<input type='button' value='\" + label + \"' \";\ns += \"onclick='\" + command + \"'>\";\n\nreturn s;\n\n\/\/\n\/\/\/\/  Functions\n\/\/\n\n\/\/ Create final CSV file content\nfunction createFinalCSV() {\n\tvar csv = encodeURIComponent(\"Data source,Data point,Value,Time\") + \"%0A\";\n    \n    for (var i in points) {\n\t    var pointInfo = getDataPointInfo(points[i]);\n\t    csv += createCSVHistory(pointInfo, startTime);\n    }\n    \n    return csv;\n}\n\n\/\/ Create CSV history for each data point specified\nfunction createCSVHistory(point, startTime) {\n\tvar pvDAO = new com.serotonin.mango.db.dao.PointValueDao();\n\tvar history = pvDAO.getPointValues(point.id, startTime);\n\tvar sdf = new java.text.SimpleDateFormat(time_pattern);\n\n    var length = history.size() - 1;\n\tvar csv = \"\";\n\t\n\tfor (var i = length; i >= 0; i--) {\n\t    var data = point.source + \",\" + point.name + \",\" + history.get(i).value + \",\" + sdf.format(history.get(i).time);\n\t    csv += encodeURIComponent(data) + \"%0A\";\n    }\n    \n    return csv;\n}\n\n\/\/ Get data point information (id, xid, point name and data source name)\nfunction getDataPointInfo(identifier) {\n    var dpDAO = new com.serotonin.mango.db.dao.DataPointDao();\n    var dp = dpDAO.getDataPoint(identifier);\n\n    var pointId = dp.getId();\n    var pointXid = String(dp.getXid());\n    var pointName = String(dp.getName());\n    var sourceName = String(dp.getDataSourceName());\n    return { id: pointId, xid: pointXid, name: pointName, source: sourceName };\n}",
               "settableOverride":false,
               "x":341,
               "y":472
            }
         ],
         "sharingUsers":[
         ],
         "backgroundFilename":"uploads\/5.png",
         "name":"Vaccine Storage",
         "xid":"GV_937079"
      }
   ],
   "dataSources":[
      {
         "xid":"DS_663848",
         "type":"MODBUS_IP",
         "alarmLevels":{
            "POINT_WRITE_EXCEPTION":"URGENT",
            "DATA_SOURCE_EXCEPTION":"URGENT",
            "POINT_READ_EXCEPTION":"URGENT"
         },
         "updatePeriodType":"SECONDS",
         "transportType":"TCP",
         "contiguousBatches":false,
         "createSlaveMonitorPoints":false,
         "createSocketMonitorPoint":false,
         "enabled":true,
         "encapsulated":false,
         "host":"192.168.1.3",
         "maxReadBitCount":2000,
         "maxReadRegisterCount":125,
         "maxWriteRegisterCount":120,
         "name":"Secure_SCADA",
         "port":502,
         "quantize":false,
         "retries":2,
         "timeout":1000,
         "updatePeriods":1
      }
   ],
   "dataPoints":[
      {
         "xid":"DP_356500",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":797,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"pwr_plant_switch",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_122663",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":0,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"pwr_gen",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_344358",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":1,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"estate_on",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_074735",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":2,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"estate_off",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_629623",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":3,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"hosp_on",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_323364",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":4,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"hosp_off",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_607608",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":5,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"pwr_plant_alarm",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_735284",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"HOLDING_REGISTER",
            "modbusDataType":"TWO_BYTE_INT_UNSIGNED",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":0,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"gen_output",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_201416",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"HOLDING_REGISTER",
            "modbusDataType":"TWO_BYTE_INT_UNSIGNED",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":1,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"pwr_plant_output",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_638463",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"HOLDING_REGISTER",
            "modbusDataType":"TWO_BYTE_INT_UNSIGNED",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":4,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"temp",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_711238",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":796,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"temp_alarm",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_165625",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":799,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"temp_exceeded",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_272709",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"HOLDING_REGISTER",
            "modbusDataType":"TWO_BYTE_INT_UNSIGNED",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":5,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"gen_fuel",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_854090",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"COIL_STATUS",
            "modbusDataType":"BINARY",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":798,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"fuel_reset",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      },
      {
         "xid":"DP_809551",
         "loggingType":"ON_CHANGE",
         "intervalLoggingPeriodType":"MINUTES",
         "intervalLoggingType":"INSTANT",
         "purgeType":"YEARS",
         "pointLocator":{
            "range":"HOLDING_REGISTER",
            "modbusDataType":"TWO_BYTE_INT_UNSIGNED",
            "additive":0.0,
            "bit":0,
            "charset":"ASCII",
            "multiplier":1.0,
            "offset":6,
            "registerCount":0,
            "settableOverride":true,
            "slaveId":1,
            "slaveMonitor":false,
            "socketMonitor":false
         },
         "eventDetectors":[
         ],
         "engineeringUnits":"",
         "chartColour":null,
         "chartRenderer":null,
         "dataSourceXid":"DS_663848",
         "defaultCacheSize":1,
         "deviceName":"Secure_SCADA",
         "discardExtremeValues":false,
         "discardHighLimit":1.7976931348623157E308,
         "discardLowLimit":-1.7976931348623157E308,
         "enabled":true,
         "intervalLoggingPeriod":15,
         "name":"fuel_settable",
         "purgePeriod":1,
         "textRenderer":{
            "type":"PLAIN",
            "suffix":""
         },
         "tolerance":0.0
      }
   ],
   "users":[
      {
         "admin":true,
         "disabled":false,
         "email":"admin@yourMangoDomain.com",
         "homeUrl":"views.shtm?viewId=9",
         "password":"0DPiKuNIrrVmD8IUCuw1hQxNqZc=",
         "phone":"",
         "receiveOwnAuditEvents":false,
         "userProfile":0,
         "username":"admin"
      }
   ],
   "watchLists":[
      {
         "xid":"WL_734113",
         "user":"admin",
         "dataPoints":[
         ],
         "sharingUsers":[
         ],
         "name":"(unnamed)"
      }
   ],
   "systemSettings":[
      {
         "filedata.path":"~\/WEB-INF\/filedata",
         "reportPurgePeriods":1,
         "language":"en",
         "futureDateLimitPeriodType":3,
         "httpClientProxyUsername":"",
         "eventPurgePeriodType":7,
         "httpClientProxyPort":-1,
         "httpdsPrologue":"",
         "uiPerformance":2000,
         "emailSmtpHost":"",
         "plotGridlineColour":"silver",
         "emailSmtpPassword":"",
         "httpdsEpilogue":"",
         "databaseSchemaVersion":"1.12.4",
         "emailFromAddress":"",
         "groveLogging":false,
         "reportPurgePeriodType":6,
         "futureDateLimitPeriods":24,
         "plotBackgroundColour":"white",
         "httpClientProxyPassword":"",
         "instanceDescription":"ScadaBR - 1.0 CE",
         "emailFromName":"ScadaBR",
         "newVersionNotificationLevel":"S",
         "emailSmtpPort":25,
         "httpClientProxyServer":"",
         "chartBackgroundColour":"white",
         "emailSmtpUsername":"",
         "eventPurgePeriods":1
      }
   ]
}